.. This file is automatically generated. Do not edit this file directly.

Google Cloud Speech API Python Samples
===============================================================================

This directory contains samples for Google Cloud Speech API. `Google Cloud Speech API`_ enables easy integration of Google speech recognition technologies into developer applications. Send audio and receive a text transcription from the Cloud Speech API service.




.. _Google Cloud Speech API: https://cloud.google.com/speech/docs 

Setup
-------------------------------------------------------------------------------


Authentication
++++++++++++++

Authentication is typically done through `Application Default Credentials`_,
which means you do not have to change the code to authenticate as long as
your environment has credentials. You have a few options for setting up
authentication:

#. When running locally, use the `Google Cloud SDK`_

    .. code-block:: bash

        gcloud beta auth application-default login


#. When running on App Engine or Compute Engine, credentials are already
   set-up. However, you may need to configure your Compute Engine instance
   with `additional scopes`_.

#. You can create a `Service Account key file`_. This file can be used to
   authenticate to Google Cloud Platform services from any environment. To use
   the file, set the ``GOOGLE_APPLICATION_CREDENTIALS`` environment variable to
   the path to the key file, for example:

    .. code-block:: bash

        export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service_account.json

.. _Application Default Credentials: https://cloud.google.com/docs/authentication#getting_credentials_for_server-centric_flow
.. _additional scopes: https://cloud.google.com/compute/docs/authentication#using
.. _Service Account key file: https://developers.google.com/identity/protocols/OAuth2ServiceAccount#creatinganaccount

Install PortAudio
+++++++++++++++++

Install `PortAudio`_. This is required by the `PyAudio`_ library to stream
audio from your computer's microphone. PyAudio depends on PortAudio for cross-platform compatibility, and is installed differently depending on the
platform.

For Mac OS X, you can use `Homebrew`_::

    brew install portaudio

For Debian / Ubuntu Linux::

    apt-get install portaudio19-dev python-all-dev

Windows may work without having to install PortAudio explicitly (it will get
installed with PyAudio).

For more details, see the `PyAudio installation`_ page.


.. _PyAudio: https://people.csail.mit.edu/hubert/pyaudio/
.. _PortAudio: http://www.portaudio.com/
.. _PyAudio installation:
  https://people.csail.mit.edu/hubert/pyaudio/#downloads
.. _Homebrew: http://brew.sh

Install Dependencies
++++++++++++++++++++

#. Install `pip`_ and `virtualenv`_ if you do not already have them.

#. Create a virtualenv. Samples are compatible with Python 2.7 and 3.4+.

    .. code-block:: bash

        $ virtualenv env
        $ source env/bin/activate

#. Install the dependencies needed to run the samples.

    .. code-block:: bash

        $ pip install -r requirements.txt

.. _pip: https://pip.pypa.io/
.. _virtualenv: https://virtualenv.pypa.io/

Samples
-------------------------------------------------------------------------------

Transcribe
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python transcribe.py

    usage: transcribe.py [-h] [--encoding {LINEAR16,FLAC,MULAW,AMR,AMR_WB}]
                         [--sample_rate SAMPLE_RATE]
                         input_uri
    
    positional arguments:
      input_uri
    
    optional arguments:
      -h, --help            show this help message and exit
      --encoding {LINEAR16,FLAC,MULAW,AMR,AMR_WB}
                            How the audio file is encoded. See https://github.com/
                            googleapis/googleapis/blob/master/google/cloud/speech/
                            v1beta1/cloud_speech.proto#L67
      --sample_rate SAMPLE_RATE


Transcribe async
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python transcribe_async.py

    usage: transcribe_async.py [-h] [--encoding {LINEAR16,FLAC,MULAW,AMR,AMR_WB}]
                               [--sample_rate SAMPLE_RATE]
                               input_uri
    
    positional arguments:
      input_uri
    
    optional arguments:
      -h, --help            show this help message and exit
      --encoding {LINEAR16,FLAC,MULAW,AMR,AMR_WB}
                            How the audio file is encoded. See https://github.com/
                            googleapis/googleapis/blob/master/google/cloud/speech/
                            v1beta1/cloud_speech.proto#L67
      --sample_rate SAMPLE_RATE


Transcribe streaming
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python transcribe_streaming.py




.. _Google Cloud SDK: https://cloud.google.com/sdk/