.. This file is automatically generated. Do not edit this file directly.

Google Cloud Storage Python Samples
===============================================================================

This directory contains samples for Google Cloud Storage. `Google Cloud Storage`_ allows world-wide storage and retrieval of any amount of data at any time.




.. _Google Cloud Storage: https://cloud.google.com/storage/docs 

Setup
-------------------------------------------------------------------------------


Authentication
++++++++++++++

Authentication is typically done through `Application Default Credentials`_,
which means you do not have to change the code to authenticate as long as
your environment has credentials. You have a few options for setting up
authentication:

#. When running locally, use the `Google Cloud SDK`_

    .. code-block:: bash

        gcloud beta auth application-default login


#. When running on App Engine or Compute Engine, credentials are already
   set-up. However, you may need to configure your Compute Engine instance
   with `additional scopes`_.

#. You can create a `Service Account key file`_. This file can be used to
   authenticate to Google Cloud Platform services from any environment. To use
   the file, set the ``GOOGLE_APPLICATION_CREDENTIALS`` environment variable to
   the path to the key file, for example:

    .. code-block:: bash

        export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service_account.json

.. _Application Default Credentials: https://cloud.google.com/docs/authentication#getting_credentials_for_server-centric_flow
.. _additional scopes: https://cloud.google.com/compute/docs/authentication#using
.. _Service Account key file: https://developers.google.com/identity/protocols/OAuth2ServiceAccount#creatinganaccount

Install Dependencies
++++++++++++++++++++

#. Install `pip`_ and `virtualenv`_ if you do not already have them.

#. Create a virtualenv. Samples are compatible with Python 2.7 and 3.4+.

    .. code-block:: bash

        $ virtualenv env
        $ source env/bin/activate

#. Install the dependencies needed to run the samples.

    .. code-block:: bash

        $ pip install -r requirements.txt

.. _pip: https://pip.pypa.io/
.. _virtualenv: https://virtualenv.pypa.io/

Samples
-------------------------------------------------------------------------------

Quickstart
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python quickstart.py


Snippets
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python snippets.py

    usage: snippets.py [-h]
                       bucket_name
                       {create-bucket,delete-bucket,list,list-with-prefix,upload,download,delete,metadata,make-public,signed-url,rename,copy}
                       ...
    
    This application demonstrates how to perform basic operations on blobs
    (objects) in a Google Cloud Storage bucket.
    
    For more information, see the README.md under /storage  and the documentation
    at https://cloud.google.com/storage/docs.
    
    positional arguments:
      bucket_name           Your cloud storage bucket.
      {create-bucket,delete-bucket,list,list-with-prefix,upload,download,delete,metadata,make-public,signed-url,rename,copy}
        create-bucket       Creates a new bucket.
        delete-bucket       Deletes a bucket. The bucket must be empty.
        list                Lists all the blobs in the bucket.
        list-with-prefix    Lists all the blobs in the bucket that begin with the
                            prefix. This can be used to list all blobs in a
                            "folder", e.g. "public/". The delimiter argument can
                            be used to restrict the results to only the "files" in
                            the given "folder". Without the delimiter, the entire
                            tree under the prefix is returned. For example, given
                            these blobs: /a/1.txt /a/b/2.txt If you just specify
                            prefix = '/a', you'll get back: /a/1.txt /a/b/2.txt
                            However, if you specify prefix='/a' and delimiter='/',
                            you'll get back: /a/1.txt
        upload              Uploads a file to the bucket.
        download            Downloads a blob from the bucket.
        delete              Deletes a blob from the bucket.
        metadata            Prints out a blob's metadata.
        make-public         Makes a blob publicly accessible.
        signed-url          Generates a signed URL for a blob. Note that this
                            method requires a service account key file. You can
                            not use this if you are using Application Default
                            Credentials from Google Compute Engine or from the
                            Google Cloud SDK.
        rename              Renames a blob.
        copy                Renames a blob.
    
    optional arguments:
      -h, --help            show this help message and exit


Access Control Lists
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python acl.py

    usage: acl.py [-h]
                  {print-bucket-acl,print-bucket-acl-for-user,add-bucket-owner,remove-bucket-owner,add-bucket-default-owner,remove-bucket-default-owner,print-blob-acl,print-blob-acl-for-user,add-blob-owner,remove-blob-owner}
                  ...
    
    This application demonstrates how to manage access control lists (acls) in
    Google Cloud Storage.
    
    For more information, see the README.md under /storage and the documentation
    at https://cloud.google.com/storage/docs/encryption.
    
    positional arguments:
      {print-bucket-acl,print-bucket-acl-for-user,add-bucket-owner,remove-bucket-owner,add-bucket-default-owner,remove-bucket-default-owner,print-blob-acl,print-blob-acl-for-user,add-blob-owner,remove-blob-owner}
        print-bucket-acl    Prints out a bucket's access control list.
        print-bucket-acl-for-user
                            Prints out a bucket's access control list.
        add-bucket-owner    Adds a user as an owner on the given bucket.
        remove-bucket-owner
                            Removes a user from the access control list of the
                            given bucket.
        add-bucket-default-owner
                            Adds a user as an owner in the given bucket's default
                            object access control list.
        remove-bucket-default-owner
                            Removes a user from the access control list of the
                            given bucket's default object access control list.
        print-blob-acl      Prints out a blob's access control list.
        print-blob-acl-for-user
                            Prints out a blob's access control list for a given
                            user.
        add-blob-owner      Adds a user as an owner on the given blob.
        remove-blob-owner   Removes a user from the access control list of the
                            given blob in the given bucket.
    
    optional arguments:
      -h, --help            show this help message and exit


Customer-Supplied Encryption
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python encryption.py

    usage: encryption.py [-h] {generate-encryption-key,upload,download,rotate} ...
    
    This application demonstrates how to upload and download encrypted blobs
    (objects) in Google Cloud Storage.
    
    Use `generate-encryption-key` to generate an example key:
    
        python encryption.py generate-encryption-key
    
    Then use the key to upload and download files encrypted with a custom key.
    
    For more information, see the README.md under /storage and the documentation
    at https://cloud.google.com/storage/docs/encryption.
    
    positional arguments:
      {generate-encryption-key,upload,download,rotate}
        generate-encryption-key
                            Generates a 256 bit (32 byte) AES encryption key and
                            prints the base64 representation. This is included for
                            demonstration purposes. You should generate your own
                            key. Please remember that encryption keys should be
                            handled with a comprehensive security policy.
        upload              Uploads a file to a Google Cloud Storage bucket using
                            a custom encryption key. The file will be encrypted by
                            Google Cloud Storage and only retrievable using the
                            provided encryption key.
        download            Downloads a previously-encrypted blob from Google
                            Cloud Storage. The encryption key provided must be the
                            same key provided when uploading the blob.
        rotate              Performs a key rotation by re-writing an encrypted
                            blob with a new encryption key.
    
    optional arguments:
      -h, --help            show this help message and exit




The client library
-------------------------------------------------------------------------------

This sample uses the `Google Cloud Client Library for Python`_.
You can read the documentation for more details on API usage and use GitHub
to `browse the source`_ and  `report issues`_.

.. Google Cloud Client Library for Python:
    https://googlecloudplatform.github.io/google-cloud-python/
.. browse the source:
    https://github.com/GoogleCloudPlatform/google-cloud-python
.. report issues:
    https://github.com/GoogleCloudPlatform/google-cloud-python/issues


.. _Google Cloud SDK: https://cloud.google.com/sdk/