.. This file is automatically generated. Do not edit this file directly.

Google Cloud Storage Python Samples
===============================================================================

This directory contains samples for Google Cloud Storage. `Google Cloud Storage`_ allows world-wide storage and retrieval of any amount of data at any time.


These samples demonstrate how to transfer data between Google Cloud Storage and other storage systems.


.. _Google Cloud Storage: https://cloud.google.com/storage/docs 

Setup
-------------------------------------------------------------------------------


Authentication
++++++++++++++

Authentication is typically done through `Application Default Credentials`_,
which means you do not have to change the code to authenticate as long as
your environment has credentials. You have a few options for setting up
authentication:

#. When running locally, use the `Google Cloud SDK`_

    .. code-block:: bash

        gcloud beta auth application-default login


#. When running on App Engine or Compute Engine, credentials are already
   set-up. However, you may need to configure your Compute Engine instance
   with `additional scopes`_.

#. You can create a `Service Account key file`_. This file can be used to
   authenticate to Google Cloud Platform services from any environment. To use
   the file, set the ``GOOGLE_APPLICATION_CREDENTIALS`` environment variable to
   the path to the key file, for example:

    .. code-block:: bash

        export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service_account.json

.. _Application Default Credentials: https://cloud.google.com/docs/authentication#getting_credentials_for_server-centric_flow
.. _additional scopes: https://cloud.google.com/compute/docs/authentication#using
.. _Service Account key file: https://developers.google.com/identity/protocols/OAuth2ServiceAccount#creatinganaccount

Install Dependencies
++++++++++++++++++++

#. Install `pip`_ and `virtualenv`_ if you do not already have them.

#. Create a virtualenv. Samples are compatible with Python 2.7 and 3.4+.

    .. code-block:: bash

        $ virtualenv env
        $ source env/bin/activate

#. Install the dependencies needed to run the samples.

    .. code-block:: bash

        $ pip install -r requirements.txt

.. _pip: https://pip.pypa.io/
.. _virtualenv: https://virtualenv.pypa.io/

Samples
-------------------------------------------------------------------------------

Transfer to GCS Nearline
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python nearline_request.py

    usage: nearline_request.py [-h]
                               description project_id date time source_bucket
                               sink_bucket
    
    Command-line sample that creates a one-time transfer from Google Cloud
    Storage standard class to the Nearline storage class."
    
    This sample is used on this page:
    
        https://cloud.google.com/storage/transfer/create-transfer
    
    For more information, see README.md.
    
    positional arguments:
      description    Transfer description.
      project_id     Your Google Cloud project ID.
      date           Date YYYY/MM/DD.
      time           Time (24hr) HH:MM.
      source_bucket  Source bucket name.
      sink_bucket    Sink bucket name.
    
    optional arguments:
      -h, --help     show this help message and exit


Transfer from AWS
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python aws_request.py

    usage: aws_request.py [-h]
                          description project_id date time source_bucket
                          access_key secret_access_key sink_bucket
    
    Command-line sample that creates a one-time transfer from Amazon S3 to
    Google Cloud Storage.
    
    This sample is used on this page:
    
        https://cloud.google.com/storage/transfer/create-transfer
    
    For more information, see README.md.
    
    positional arguments:
      description        Transfer description.
      project_id         Your Google Cloud project ID.
      date               Date YYYY/MM/DD.
      time               Time (24hr) HH:MM.
      source_bucket      Source bucket name.
      access_key         Your AWS access key id.
      secret_access_key  Your AWS secret access key.
      sink_bucket        Sink bucket name.
    
    optional arguments:
      -h, --help         show this help message and exit


Check transfer status
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



To run this sample:

.. code-block:: bash

    $ python transfer_check.py

    usage: transfer_check.py [-h] project_id job_name
    
    Command-line sample that checks the status of an in-process transfer.
    
    This sample is used on this page:
    
        https://cloud.google.com/storage/transfer/create-transfer
    
    For more information, see README.md.
    
    positional arguments:
      project_id  Your Google Cloud project ID.
      job_name    Your job name.
    
    optional arguments:
      -h, --help  show this help message and exit




.. _Google Cloud SDK: https://cloud.google.com/sdk/